module.exports = {
    operationsArray: [
        {
            name: "getMatchDetails",
            description: "Returns the details - including results - that belong to a match.",
            style: undefined,
            url: "url/soap/services/getMatchDetails.php",
            input: {
                children: [
                    {
                        children: [
                        ],
                        minOccurs: "1",
                        maxOccurs: "1",
                        name: "application_key",
                        type: "string",
                        isComplex: false,
                        namespace: "",
                        maximum: undefined,
                        minimum: undefined,
                        maxLength: undefined,
                        minLength: undefined,
                        pattern: undefined,
                        enumValues: undefined,
                    },
                    {
                        children: [
                        ],
                        minOccurs: "1",
                        maxOccurs: "1",
                        name: "matchId",
                        type: "string",
                        isComplex: false,
                        namespace: "",
                        maximum: undefined,
                        minimum: undefined,
                        maxLength: undefined,
                        minLength: undefined,
                        pattern: undefined,
                        enumValues: undefined,
                    },
                ],
                minOccurs: "0",
                maxOccurs: "1",
                name: "getMatchDetails",
                type: "complex",
                isComplex: true,
                namespace: "url/soap/services/getMatchDetails.php",
                maximum: undefined,
                minimum: undefined,
                maxLength: undefined,
                minLength: undefined,
                pattern: undefined,
                enumValues: undefined,
                isElement: true,
            },
            output: {
                children: [
                    {
                        children: [
                            {
                                children: [
                                    {
                                        children: [
                                        ],
                                        minOccurs: "1",
                                        maxOccurs: "1",
                                        name: "id",
                                        type: "integer",
                                        isComplex: false,
                                        namespace: "",
                                        maximum: 2147483647,
                                        minimum: -2147483648,
                                        maxLength: undefined,
                                        minLength: undefined,
                                        pattern: undefined,
                                        enumValues: undefined,
                                    },
                                    {
                                        children: [
                                        ],
                                        minOccurs: "1",
                                        maxOccurs: "1",
                                        name: "hometeamid",
                                        type: "integer",
                                        isComplex: false,
                                        namespace: "",
                                        maximum: 2147483647,
                                        minimum: -2147483648,
                                        maxLength: undefined,
                                        minLength: undefined,
                                        pattern: undefined,
                                        enumValues: undefined,
                                    },
                                    {
                                        children: [
                                        ],
                                        minOccurs: "1",
                                        maxOccurs: "1",
                                        name: "hometeamidname",
                                        type: "string",
                                        isComplex: false,
                                        namespace: "",
                                        maximum: undefined,
                                        minimum: undefined,
                                        maxLength: undefined,
                                        minLength: undefined,
                                        pattern: undefined,
                                        enumValues: undefined,
                                    },
                                    {
                                        children: [
                                        ],
                                        minOccurs: "1",
                                        maxOccurs: "1",
                                        name: "guestteamid",
                                        type: "integer",
                                        isComplex: false,
                                        namespace: "",
                                        maximum: 2147483647,
                                        minimum: -2147483648,
                                        maxLength: undefined,
                                        minLength: undefined,
                                        pattern: undefined,
                                        enumValues: undefined,
                                    },
                                    {
                                        children: [
                                        ],
                                        minOccurs: "1",
                                        maxOccurs: "1",
                                        name: "guestteamname",
                                        type: "string",
                                        isComplex: false,
                                        namespace: "",
                                        maximum: undefined,
                                        minimum: undefined,
                                        maxLength: undefined,
                                        minLength: undefined,
                                        pattern: undefined,
                                        enumValues: undefined,
                                    },
                                    {
                                        children: [
                                        ],
                                        minOccurs: "1",
                                        maxOccurs: "1",
                                        name: "matchdate",
                                        type: "string",
                                        isComplex: false,
                                        namespace: "",
                                        maximum: undefined,
                                        minimum: undefined,
                                        maxLength: undefined,
                                        minLength: undefined,
                                        pattern: "-?([1-9][0-9]{3,}|0[0-9]{3})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?",
                                        enumValues: undefined,
                                    },
                                    {
                                        children: [
                                        ],
                                        minOccurs: "1",
                                        maxOccurs: "1",
                                        name: "homegoal",
                                        type: "integer",
                                        isComplex: false,
                                        namespace: "",
                                        maximum: 2147483647,
                                        minimum: -2147483648,
                                        maxLength: undefined,
                                        minLength: undefined,
                                        pattern: undefined,
                                        enumValues: undefined,
                                    },
                                    {
                                        children: [
                                        ],
                                        minOccurs: "1",
                                        maxOccurs: "1",
                                        name: "guestgoal",
                                        type: "integer",
                                        isComplex: false,
                                        namespace: "",
                                        maximum: 2147483647,
                                        minimum: -2147483648,
                                        maxLength: undefined,
                                        minLength: undefined,
                                        pattern: undefined,
                                        enumValues: undefined,
                                    },
                                    {
                                        children: [
                                        ],
                                        minOccurs: "1",
                                        maxOccurs: "1",
                                        name: "status",
                                        type: "integer",
                                        isComplex: false,
                                        namespace: "",
                                        maximum: 2147483647,
                                        minimum: -2147483648,
                                        maxLength: undefined,
                                        minLength: undefined,
                                        pattern: undefined,
                                        enumValues: undefined,
                                    },
                                    {
                                        children: [
                                        ],
                                        minOccurs: "1",
                                        maxOccurs: "1",
                                        name: "UpdateTimeStamp",
                                        type: "DateTime",
                                        isComplex: true,
                                        namespace: "",
                                        maximum: "",
                                        minimum: "",
                                        maxLength: "",
                                        minLength: "",
                                        pattern: "",
                                        enumValues: "",
                                    },
                                ],
                                minOccurs: "1",
                                maxOccurs: "1",
                                name: "item",
                                type: "MatchDetail",
                                isComplex: true,
                                namespace: "",
                                maximum: "",
                                minimum: "",
                                maxLength: "",
                                minLength: "",
                                pattern: "",
                                enumValues: "",
                            },
                        ],
                        minOccurs: "1",
                        maxOccurs: "1",
                        name: "getMatchDetailsResult",
                        type: "ArrayOfMatchDetail",
                        isComplex: true,
                        namespace: "",
                        maximum: "",
                        minimum: "",
                        maxLength: "",
                        minLength: "",
                        pattern: "",
                        enumValues: "",
                    },
                ],
                minOccurs: "0",
                maxOccurs: "1",
                name: "getMatchDetailsResponse",
                type: "complex",
                isComplex: true,
                namespace: "url/soap/services/getMatchDetails.php",
                maximum: undefined,
                minimum: undefined,
                maxLength: undefined,
                minLength: undefined,
                pattern: undefined,
                enumValues: undefined,
                isElement: true,
            },
            fault: null,
            portName: "getMatchDetailsPort",
            serviceName: "getMatchDetailsService",
            method: "POST",
            protocol: "soap",
            xpathInfo: {
                xpath: "//definitions//binding[@name=\"getMatchDetailsBinding\"]//operation[@name=\"getMatchDetails\"]",
                wsdlNamespaceUrl: "http://schemas.xmlsoap.org/wsdl/",
            },
        },
    ],
    targetNamespace: {
        key: "targetNamespace",
        url: "url/soap/services/getMatchDetails.php",
        prefixFilter: "targetNamespace:",
        isDefault: false,
    },
    wsdlNamespace: {
        key: "xmlns",
        url: "http://schemas.xmlsoap.org/wsdl/",
        prefixFilter: "xmlns:",
        isDefault: true,
    },
    SOAPNamespace: {
        key: "soap",
        url: "http://schemas.xmlsoap.org/wsdl/soap/",
        prefixFilter: "soap:",
        isDefault: false,
    },
    SOAP12Namespace: {
        key: "soap12",
        url: "http://schemas.xmlsoap.org/wsdl/soap12/",
        prefixFilter: "soap12:",
        isDefault: false,
    },
    HTTPNamespace: null,
    schemaNamespace: {
        key: "xsd",
        url: "http://www.w3.org/2001/XMLSchema",
        prefixFilter: "xsd:",
        tnsDefinitionURL: "url/soap/services/getMatchDetails.php",
        isDefault: false,
    },
    tnsNamespace: {
        key: "tns",
        url: "url/soap/services/getMatchDetails.php",
        prefixFilter: "xmlns:tns:",
        isDefault: false,
    },
    allNameSpaces: [
        {
            key: "xmlns",
            url: "http://schemas.xmlsoap.org/wsdl/",
            prefixFilter: "xmlns:",
            isDefault: true,
        },
        {
            key: "wsdl",
            url: "http://schemas.xmlsoap.org/wsdl/",
            prefixFilter: "xmlns:wsdl:",
            isDefault: false,
        },
        {
            key: "tns",
            url: "url/soap/services/getMatchDetails.php",
            prefixFilter: "xmlns:tns:",
            isDefault: false,
        },
        {
            key: "soap",
            url: "http://schemas.xmlsoap.org/wsdl/soap/",
            prefixFilter: "xmlns:soap:",
            isDefault: false,
        },
        {
            key: "xsd",
            url: "http://www.w3.org/2001/XMLSchema",
            prefixFilter: "xmlns:xsd:",
            isDefault: false,
        },
        {
            key: "soap-enc",
            url: "http://schemas.xmlsoap.org/soap/encoding/",
            prefixFilter: "xmlns:soap-enc:",
            isDefault: false,
        },
        {
            key: "soap12",
            url: "http://schemas.xmlsoap.org/wsdl/soap12/",
            prefixFilter: "xmlns:soap12:",
            isDefault: false,
        },
        {
            key: "targetNamespace",
            url: "url/soap/services/getMatchDetails.php",
            prefixFilter: "targetNamespace:",
            isDefault: false,
        },
    ],
    fileName: "",
    securityPolicyArray: [
    ],
    log: {
        errors: "",
    },
    xmlParsed: {
        definitions: {
            "@_xmlns": "http://schemas.xmlsoap.org/wsdl/",
            "@_xmlns:wsdl": "http://schemas.xmlsoap.org/wsdl/",
            "@_xmlns:tns": "url/soap/services/getMatchDetails.php",
            "@_xmlns:soap": "http://schemas.xmlsoap.org/wsdl/soap/",
            "@_xmlns:xsd": "http://www.w3.org/2001/XMLSchema",
            "@_xmlns:soap-enc": "http://schemas.xmlsoap.org/soap/encoding/",
            "@_xmlns:soap12": "http://schemas.xmlsoap.org/wsdl/soap12/",
            "@_name": "getMatchDetails",
            "@_targetNamespace": "url/soap/services/getMatchDetails.php",
            types: {
                "xsd:schema": {
                    "@_targetNamespace": "url/soap/services/getMatchDetails.php",
                    "xsd:element": [
                        {
                            "@_name": "getMatchDetails",
                            "xsd:complexType": {
                                "xsd:sequence": {
                                    "xsd:element": [
                                        {
                                            "@_name": "application_key",
                                            "@_type": "xsd:string",
                                        },
                                        {
                                            "@_name": "matchId",
                                            "@_type": "xsd:string",
                                            "@_nillable": "true",
                                        },
                                    ],
                                },
                            },
                        },
                        {
                            "@_name": "getMatchDetailsResponse",
                            "xsd:complexType": {
                                "xsd:sequence": {
                                    "xsd:element": {
                                        "@_name": "getMatchDetailsResult",
                                        "@_type": "tns:ArrayOfMatchDetail",
                                    },
                                },
                            },
                        },
                    ],
                    "xsd:complexType": [
                        {
                            "@_name": "DateTime",
                            "xsd:sequence": "",
                        },
                        {
                            "@_name": "MatchDetail",
                            "xsd:sequence": {
                                "xsd:element": [
                                    {
                                        "@_name": "id",
                                        "@_type": "xsd:int",
                                        "@_nillable": "true",
                                    },
                                    {
                                        "@_name": "hometeamid",
                                        "@_type": "xsd:int",
                                        "@_nillable": "true",
                                    },
                                    {
                                        "@_name": "hometeamidname",
                                        "@_type": "xsd:string",
                                        "@_nillable": "true",
                                    },
                                    {
                                        "@_name": "guestteamid",
                                        "@_type": "xsd:int",
                                        "@_nillable": "true",
                                    },
                                    {
                                        "@_name": "guestteamname",
                                        "@_type": "xsd:string",
                                        "@_nillable": "true",
                                    },
                                    {
                                        "@_name": "matchdate",
                                        "@_type": "xsd:date",
                                        "@_nillable": "true",
                                    },
                                    {
                                        "@_name": "homegoal",
                                        "@_type": "xsd:int",
                                        "@_nillable": "true",
                                    },
                                    {
                                        "@_name": "guestgoal",
                                        "@_type": "xsd:int",
                                        "@_nillable": "true",
                                    },
                                    {
                                        "@_name": "status",
                                        "@_type": "xsd:int",
                                        "@_nillable": "true",
                                    },
                                    {
                                        "@_name": "UpdateTimeStamp",
                                        "@_type": "tns:DateTime",
                                        "@_nillable": "true",
                                    },
                                ],
                            },
                        },
                        {
                            "@_name": "ArrayOfMatchDetail",
                            "xsd:sequence": {
                                "xsd:element": {
                                    "@_name": "item",
                                    "@_type": "tns:MatchDetail",
                                    "@_minOccurs": "0",
                                    "@_maxOccurs": "unbounded",
                                },
                            },
                        },
                    ],
                },
            },
            portType: {
                "@_name": "getMatchDetailsPort",
                operation: {
                    "@_name": "getMatchDetails",
                    documentation: "Returns the details - including results - that belong to a match.",
                    input: {
                        "@_message": "tns:getMatchDetailsIn",
                    },
                    output: {
                        "@_message": "tns:getMatchDetailsOut",
                    },
                },
            },
            binding: {
                "@_name": "getMatchDetailsBinding",
                "@_type": "tns:getMatchDetailsPort",
                "soap:binding": {
                    "@_style": "document",
                    "@_transport": "http://schemas.xmlsoap.org/soap/http",
                },
                operation: {
                    "@_name": "getMatchDetails",
                    "soap:operation": {
                        "@_soapAction": "url/soap/services/getMatchDetails.php#getMatchDetails",
                    },
                    input: {
                        "soap:body": {
                            "@_use": "literal",
                        },
                    },
                    output: {
                        "soap:body": {
                            "@_use": "literal",
                        },
                    },
                },
            },
            service: {
                "@_name": "getMatchDetailsService",
                port: {
                    "@_name": "getMatchDetailsPort",
                    "@_binding": "tns:getMatchDetailsBinding",
                    "soap:address": {
                        "@_location": "url/soap/services/getMatchDetails.php",
                    },
                },
            },
            message: [
                {
                    "@_name": "getMatchDetailsIn",
                    part: {
                        "@_name": "parameters",
                        "@_element": "tns:getMatchDetails",
                    },
                },
                {
                    "@_name": "getMatchDetailsOut",
                    part: {
                        "@_name": "parameters",
                        "@_element": "tns:getMatchDetailsResponse",
                    },
                },
            ],
        },
    },
    version: "1.1",
    securityPolicyNamespace: null,
}
